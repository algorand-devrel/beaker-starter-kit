{"hints": {"read_price": {"read_only": true}, "read_rsvp": {"read_only": true}}, "source": {"approval": "I3ByYWdtYSB2ZXJzaW9uIDcKaW50Y2Jsb2NrIDEgMCAyCmJ5dGVjYmxvY2sgMHg3MjczNzY3MCAweDcwNzI2OTYzNjUgMHgxNTFmN2M3NSAweDYzNjg2NTYzNmI2NTY0NWY2OTZlCnR4biBOdW1BcHBBcmdzCmludGNfMSAvLyAwCj09CmJueiBtYWluX2wxMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDhmZTI1ZTA1IC8vICJjaGVja19pbigpdm9pZCIKPT0KYm56IG1haW5fbDExCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4MjQwZDJmNjcgLy8gImNyZWF0ZSh1aW50NjQpdm9pZCIKPT0KYm56IG1haW5fbDEwCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZTkyMmJlOTUgLy8gImRvX3JzdnAocGF5KXZvaWQiCj09CmJueiBtYWluX2w5CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4OGEyM2VlMjEgLy8gInJlYWRfcHJpY2UoKXVpbnQ2NCIKPT0KYm56IG1haW5fbDgKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHhlZjk3NzI1NSAvLyAicmVhZF9yc3ZwKCl1aW50NjQiCj09CmJueiBtYWluX2w3CmVycgptYWluX2w3Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMSAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMSAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHJlYWRyc3ZwXzkKc3RvcmUgMgpieXRlY18yIC8vIDB4MTUxZjdjNzUKbG9hZCAyCml0b2IKY29uY2F0CmxvZwppbnRjXzAgLy8gMQpyZXR1cm4KbWFpbl9sODoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzEgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzEgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiByZWFkcHJpY2VfOApzdG9yZSAxCmJ5dGVjXzIgLy8gMHgxNTFmN2M3NQpsb2FkIDEKaXRvYgpjb25jYXQKbG9nCmludGNfMCAvLyAxCnJldHVybgptYWluX2w5Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBPcHRJbgo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzEgLy8gMAohPQomJgphc3NlcnQKdHhuIEdyb3VwSW5kZXgKaW50Y18wIC8vIDEKLQpzdG9yZSAwCmxvYWQgMApndHhucyBUeXBlRW51bQppbnRjXzAgLy8gcGF5Cj09CmFzc2VydApsb2FkIDAKY2FsbHN1YiBkb3JzdnBfNwppbnRjXzAgLy8gMQpyZXR1cm4KbWFpbl9sMTA6CnR4biBPbkNvbXBsZXRpb24KaW50Y18xIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18xIC8vIDAKPT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKYnRvaQpjYWxsc3ViIGNyZWF0ZV82CmludGNfMCAvLyAxCnJldHVybgptYWluX2wxMToKdHhuIE9uQ29tcGxldGlvbgppbnRjXzEgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzEgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiBjaGVja2luXzUKaW50Y18wIC8vIDEKcmV0dXJuCm1haW5fbDEyOgp0eG4gT25Db21wbGV0aW9uCmludGNfMiAvLyBDbG9zZU91dAo9PQpibnogbWFpbl9sMTYKdHhuIE9uQ29tcGxldGlvbgpwdXNoaW50IDUgLy8gRGVsZXRlQXBwbGljYXRpb24KPT0KYm56IG1haW5fbDE1CmVycgptYWluX2wxNToKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18xIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgZGVsZXRlXzEKaW50Y18wIC8vIDEKcmV0dXJuCm1haW5fbDE2Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzEgLy8gMAohPQphc3NlcnQKY2FsbHN1YiBiYXJlZXh0ZXJuYWxfMgppbnRjXzAgLy8gMQpyZXR1cm4KCi8vIGF1dGhfb25seQphdXRob25seV8wOgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyBkZWxldGUKZGVsZXRlXzE6CnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob25seV8wCi8vIHVuYXV0aG9yaXplZAphc3NlcnQKaW50Y18wIC8vIDEKcmV0dXJuCgovLyBiYXJlX2V4dGVybmFsCmJhcmVleHRlcm5hbF8yOgppdHhuX2JlZ2luCmludGNfMCAvLyBwYXkKaXR4bl9maWVsZCBUeXBlRW51bQp0eG4gU2VuZGVyCml0eG5fZmllbGQgUmVjZWl2ZXIKYnl0ZWNfMSAvLyAicHJpY2UiCmFwcF9nbG9iYWxfZ2V0Cml0eG5fZmllbGQgQW1vdW50Cml0eG5fc3VibWl0CmJ5dGVjXzAgLy8gInJzdnAiCmJ5dGVjXzAgLy8gInJzdnAiCmFwcF9nbG9iYWxfZ2V0CmludGNfMCAvLyAxCi0KYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyBhdXRoX29wdGVkX2luCmF1dGhvcHRlZGluXzM6Cmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25JRAphcHBfb3B0ZWRfaW4KcmV0c3ViCgovLyBhdXRoX29ubHkKYXV0aG9ubHlfNDoKZ2xvYmFsIENyZWF0b3JBZGRyZXNzCj09CnJldHN1YgoKLy8gY2hlY2tfaW4KY2hlY2tpbl81Ogp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aG9wdGVkaW5fMwovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CnR4biBTZW5kZXIKYnl0ZWNfMyAvLyAiY2hlY2tlZF9pbiIKaW50Y18wIC8vIDEKYXBwX2xvY2FsX3B1dApyZXRzdWIKCi8vIGNyZWF0ZQpjcmVhdGVfNjoKc3RvcmUgMwpieXRlY18xIC8vICJwcmljZSIKcHVzaGludCAxMDAwMDAwIC8vIDEwMDAwMDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMCAvLyAicnN2cCIKaW50Y18xIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMSAvLyAicHJpY2UiCmxvYWQgMwphcHBfZ2xvYmFsX3B1dApyZXRzdWIKCi8vIGRvX3JzdnAKZG9yc3ZwXzc6CnN0b3JlIDQKZ2xvYmFsIEdyb3VwU2l6ZQppbnRjXzIgLy8gMgo9PQphc3NlcnQKbG9hZCA0Cmd0eG5zIFJlY2VpdmVyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCj09CmFzc2VydApsb2FkIDQKZ3R4bnMgQW1vdW50CmJ5dGVjXzEgLy8gInByaWNlIgphcHBfZ2xvYmFsX2dldAo9PQphc3NlcnQKdHhuIFNlbmRlcgpieXRlY18zIC8vICJjaGVja2VkX2luIgppbnRjXzEgLy8gMAphcHBfbG9jYWxfcHV0CmJ5dGVjXzAgLy8gInJzdnAiCmJ5dGVjXzAgLy8gInJzdnAiCmFwcF9nbG9iYWxfZ2V0CmludGNfMCAvLyAxCisKYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyByZWFkX3ByaWNlCnJlYWRwcmljZV84OgpieXRlY18xIC8vICJwcmljZSIKYXBwX2dsb2JhbF9nZXQKcmV0c3ViCgovLyByZWFkX3JzdnAKcmVhZHJzdnBfOToKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzQKLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlY18wIC8vICJyc3ZwIgphcHBfZ2xvYmFsX2dldApyZXRzdWI=", "clear": "I3ByYWdtYSB2ZXJzaW9uIDcKaW50Y2Jsb2NrIDEKYnl0ZWNibG9jayAweDcyNzM3NjcwCnR4biBOdW1BcHBBcmdzCnB1c2hpbnQgMCAvLyAwCj09CmJueiBtYWluX2wyCmVycgptYWluX2wyOgpjYWxsc3ViIGJhcmVleHRlcm5hbF8wCmludGNfMCAvLyAxCnJldHVybgoKLy8gYmFyZV9leHRlcm5hbApiYXJlZXh0ZXJuYWxfMDoKaXR4bl9iZWdpbgppbnRjXzAgLy8gcGF5Cml0eG5fZmllbGQgVHlwZUVudW0KdHhuIFNlbmRlcgppdHhuX2ZpZWxkIFJlY2VpdmVyCnB1c2hieXRlcyAweDcwNzI2OTYzNjUgLy8gInByaWNlIgphcHBfZ2xvYmFsX2dldAppdHhuX2ZpZWxkIEFtb3VudAppdHhuX3N1Ym1pdApieXRlY18wIC8vICJyc3ZwIgpieXRlY18wIC8vICJyc3ZwIgphcHBfZ2xvYmFsX2dldAppbnRjXzAgLy8gMQotCmFwcF9nbG9iYWxfcHV0CnJldHN1Yg=="}, "schema": {"local": {"declared": {"checked_in": {"type": "uint64", "key": "checked_in", "descr": "0 = not checked in, 1 = checked in"}}, "dynamic": {}}, "global": {"declared": {"price": {"type": "uint64", "key": "price", "descr": "The price of the event. Default price is 1 Algo"}, "rsvp": {"type": "uint64", "key": "rsvp", "descr": "Number of people who RSVPed to the event"}}, "dynamic": {}}}, "contract": {"name": "EventRSVP", "methods": [{"name": "check_in", "args": [], "returns": {"type": "void"}, "desc": "If the Sender RSVPed, check-in the Sender"}, {"name": "create", "args": [{"type": "uint64", "name": "event_price"}], "returns": {"type": "void"}, "desc": "Deploys the contract and initialze the app states"}, {"name": "do_rsvp", "args": [{"type": "pay", "name": "payment"}], "returns": {"type": "void"}, "desc": "Sender rsvp to the event by opting into the contract"}, {"name": "read_price", "args": [], "returns": {"type": "uint64"}, "desc": "Read amount of RSVP to the event. Only callable by Creator."}, {"name": "read_rsvp", "args": [], "returns": {"type": "uint64"}, "desc": "Read amount of RSVP to the event. Only callable by Creator."}], "networks": {}}}